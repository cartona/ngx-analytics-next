var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/SegmentConfig.html",[0,1.012,1,0.831]],["body/interfaces/SegmentConfig.html",[0,1.463,1,1.201,2,1.377,3,1.127,4,1.127,5,0.928,6,0.62,7,0.768,8,1.377,9,1.377,10,2.009,11,0.762,12,1.553,13,2.226,14,2.339,15,2.128,16,2.454,17,3.769,18,3.769,19,2.687,20,1.105,21,0.077,22,1.897,23,2.358,24,3.057,25,2.536,26,2.358,27,3.057,28,2.358,29,2.358,30,3.057,31,3.057,32,3.057,33,2.358,34,3.057,35,0.928,36,2.358,37,0.928,38,1.463,39,1.711,40,1.711,41,2.358,42,0.928,43,0.928,44,1.711,45,1.127,46,1.127,47,1.377,48,1.127,49,1.711,50,0.036,51,0.05,52,0.036]],["title/modules/SegmentModule.html",[53,1.229,54,1.229]],["body/modules/SegmentModule.html",[1,1.268,3,1.075,4,1.075,5,0.885,6,0.826,7,0.774,9,1.836,10,1.503,13,1.503,20,0.591,21,0.078,35,1.684,37,0.885,38,1.237,42,1.237,43,0.885,45,1.075,50,0.034,51,0.048,52,0.034,53,2.1,54,1.876,55,1.313,56,1.313,57,2.115,58,2.958,59,2.115,60,2.958,61,1.632,62,2.115,63,2.958,64,1.075,65,1.075,66,3.41,67,2.115,68,2.117,69,3.41,70,2.63,71,2.958,72,2.958,73,2.958,74,2.115,75,1.632,76,1.503,77,1.836,78,2.115,79,1.237,80,1.876,81,1.313,82,1.632,83,1.075,84,1.075,85,1.313,86,1.632,87,0.885,88,1.632,89,2.281,90,2.115,91,1.632,92,2.281,93,2.958,94,2.115,95,1.313,96,2.115,97,1.075,98,2.281,99,1.075,100,2.115,101,1.313,102,3.41,103,1.632,104,2.115,105,2.115,106,2.115,107,2.115,108,1.632,109,1.632]],["title/interfaces/SegmentPlugin.html",[0,1.012,110,1.229]],["body/interfaces/SegmentPlugin.html",[0,0.274,1,0.534,2,0.407,3,0.333,4,0.588,5,0.274,6,0.183,7,0.371,10,0.588,12,1.948,13,0.952,14,0.407,15,0.79,19,2.441,20,0.183,21,0.078,22,0.719,23,1.65,25,0.719,26,0.893,28,0.506,29,1.198,33,1.198,35,0.784,37,0.274,38,0.65,41,0.893,42,0.274,43,1.194,45,0.333,46,0.588,47,0.407,48,0.79,50,0.011,51,0.019,52,0.011,64,0.333,65,1.807,68,1.98,75,0.506,76,0.333,77,0.407,79,0.484,80,0.588,81,0.407,85,0.719,87,1.067,89,2.743,97,0.333,98,3.272,99,1.928,101,0.407,103,0.506,108,0.893,110,0.79,111,0.407,112,0.656,113,0.588,114,0.656,115,0.656,116,1.198,117,0.656,118,0.656,119,0.656,120,1.198,121,0.893,122,0.506,123,0.506,124,2.384,125,0.656,126,0.656,127,1.554,128,0.656,129,0.656,130,1.158,131,1.158,132,1.554,133,1.554,134,0.656,135,0.656,136,0.656,137,0.656,138,1.158,139,1.874,140,1.554,141,1.874,142,0.656,143,0.656,144,1.874,145,1.158,146,1.158,147,0.656,148,0.656,149,0.506,150,0.656,151,1.158,152,1.158,153,0.656,154,0.656,155,0.656,156,0.656,157,0.656,158,0.656,159,1.158,160,0.964,161,2.139,162,3.091,163,1.198,164,1.158,165,3.612,166,0.656,167,0.656,168,0.656,169,0.656,170,0.656,171,0.656,172,3.557,173,0.656,174,0.656,175,0.656,176,0.656,177,0.656,178,0.656,179,0.656,180,3.077,181,0.656,182,0.656,183,0.656,184,0.656,185,0.656,186,0.656,187,0.656,188,0.656,189,0.656,190,1.158,191,0.656,192,0.656,193,0.656,194,0.656,195,0.656,196,0.656,197,0.656,198,0.656,199,0.506,200,0.656,201,0.656,202,0.656,203,1.554,204,1.158,205,1.158,206,0.656,207,1.554,208,2.528,209,0.656,210,2.202,211,2.697,212,3.358,213,0.656,214,0.656,215,0.506,216,2.202,217,2.361,218,0.656,219,2.139,220,2.361,221,1.874,222,1.874,223,0.656,224,2.034,225,0.656,226,0.656,227,0.506,228,0.656,229,1.554,230,1.554,231,1.554,232,1.554,233,1.554,234,1.554,235,1.554,236,0.656,237,1.874,238,0.893,239,0.656,240,0.656,241,2.855,242,0.656,243,0.656,244,0.656,245,0.656,246,0.656,247,0.656,248,0.656,249,0.656,250,0.656,251,0.656,252,0.656,253,0.656,254,0.656,255,0.656,256,0.656,257,0.656,258,0.656,259,0.656,260,0.656,261,0.506,262,0.656,263,0.656,264,0.656,265,0.656,266,0.656,267,0.656,268,0.656,269,1.198,270,0.656,271,0.656,272,0.656,273,2.713,274,0.656,275,0.506,276,0.656,277,0.656,278,1.158,279,1.554,280,0.656,281,1.158,282,0.656,283,0.407,284,0.656,285,0.656,286,1.158,287,0.656,288,0.893,289,0.656,290,0.656,291,0.506,292,1.158,293,1.158,294,0.656,295,0.656,296,0.656,297,0.506,298,0.656,299,0.656,300,0.656,301,0.656,302,0.656,303,0.656,304,0.656,305,0.656,306,0.656,307,0.506,308,0.656,309,1.158,310,0.656,311,1.554,312,0.506,313,0.656,314,0.656,315,1.198,316,0.656,317,0.656,318,0.506,319,0.656,320,0.656,321,1.158,322,0.656,323,0.656,324,1.158,325,1.158,326,1.158,327,0.656,328,1.158,329,0.656,330,1.158,331,0.506,332,1.445,333,0.656,334,0.656,335,1.554,336,0.656,337,0.656,338,0.506,339,0.656,340,0.656,341,1.158,342,0.506,343,0.656,344,0.719,345,0.656,346,0.893,347,0.506,348,0.656,349,0.893,350,1.554,351,0.506,352,0.656,353,0.656,354,1.158,355,1.554,356,0.656,357,0.656,358,0.506,359,0.656]],["title/injectables/WindowWrapper.html",[79,1.012,113,1.229]],["body/injectables/WindowWrapper.html",[3,1.543,4,1.543,5,1.27,7,0.652,9,1.885,11,1.043,12,1.907,20,0.849,21,0.075,35,1.27,37,1.27,38,1.27,50,0.049,51,0.061,52,0.049,61,2.342,79,1.57,80,1.907,81,2.33,83,1.907,84,1.907,86,2.895,97,1.543,99,2.07,113,1.907,283,2.33,360,2.342,361,2.895,362,2.342,363,3.143,364,3.037]],["title/coverage.html",[365,2.501]],["body/coverage.html",[0,1.524,1,0.994,5,1.211,6,1.23,7,0.764,8,2.474,20,0.809,21,0.074,42,1.211,43,1.211,46,1.471,50,0.047,51,0.059,52,0.047,56,1.796,76,1.471,79,1.211,87,1.211,95,1.796,110,1.471,111,2.261,113,1.851,288,2.232,361,2.232,362,2.232,365,2.232,366,1.796,367,2.894,368,4.184,369,2.894,370,3.643,371,3.643,372,3.643,373,3.643,374,2.894,375,2.894,376,2.894,377,2.894,378,2.894]],["title/dependencies.html",[379,2.05,380,1.796]],["body/dependencies.html",[21,0.068,50,0.06,51,0.068,52,0.06,380,2.276]],["title/miscellaneous/functions.html",[344,1.796,381,0.704]],["body/miscellaneous/functions.html",[6,0.945,7,0.695,11,1.161,13,1.718,21,0.07,50,0.055,51,0.065,52,0.055,56,2.486,64,1.718,65,1.718,80,1.718,82,2.608,83,1.718,84,1.718,88,2.608,95,2.486,344,2.098,381,1.161,382,2.098,383,3.381]],["title/index.html",[11,0.704,384,1.581,385,1.581]],["body/index.html",[7,0.708,12,1.824,14,1.072,15,0.877,16,1.072,19,2.671,21,0.077,22,1.888,25,1.072,35,1.627,37,1.069,38,1.069,48,1.299,50,0.028,51,0.042,52,0.028,53,1.299,54,1.299,64,0.877,65,0.877,68,1.072,70,1.971,76,1.546,77,2.087,83,1.546,84,0.877,85,1.072,87,1.407,91,1.332,92,1.332,97,1.299,99,0.877,101,1.072,109,1.971,110,0.877,116,1.332,121,1.332,122,1.332,123,1.332,124,2.999,160,1.072,163,1.332,180,2.899,199,1.332,208,2.347,210,1.332,211,1.332,215,1.332,216,2.899,224,1.888,227,1.332,238,1.332,261,1.332,269,1.332,275,1.332,283,1.586,307,1.332,312,2.347,315,1.332,318,1.332,331,1.332,332,2.593,338,1.332,342,1.332,346,1.332,347,1.332,349,1.332,351,1.332,358,1.332,363,2.347,366,1.586,386,1.727,387,1.727,388,1.727,389,2.556,390,2.556,391,1.727,392,1.727,393,2.556,394,3.362,395,1.727,396,1.727,397,2.556,398,1.727,399,3.042,400,1.727,401,1.727,402,1.727,403,1.727,404,1.727,405,1.727,406,1.332,407,1.727,408,1.727,409,2.556,410,2.556,411,1.727,412,2.556,413,1.727,414,1.727,415,1.727,416,1.727,417,1.727,418,1.727,419,1.727,420,1.727,421,1.727,422,1.727,423,1.727,424,1.727,425,1.332,426,1.727,427,1.727,428,1.727,429,1.727,430,2.556,431,1.727,432,1.727,433,1.727,434,1.971,435,1.727,436,1.727,437,1.727,438,1.727,439,1.727,440,1.727,441,1.971,442,1.727,443,1.727,444,1.727,445,1.332,446,1.727,447,1.332]],["title/license.html",[384,1.581,385,1.581,448,1.581]],["body/license.html",[21,0.056,50,0.043,51,0.056,52,0.043,149,2.035,224,1.637,297,2.648,366,1.637,406,2.648,434,2.035,441,2.035,445,2.648,447,2.035,448,2.035,449,3.817,450,2.638,451,2.638,452,3.433,453,2.638,454,2.638,455,2.638,456,2.638,457,2.638,458,2.638,459,3.433,460,4.484,461,2.638,462,2.638,463,3.817,464,2.638,465,2.638,466,2.638,467,2.638,468,2.638,469,2.638,470,2.638,471,2.638,472,2.638,473,3.433,474,2.638,475,2.638,476,2.638,477,2.638,478,2.638,479,2.638,480,2.638,481,3.433,482,3.433,483,2.638,484,2.638,485,2.638,486,2.638,487,2.638,488,2.638,489,2.638,490,2.638,491,2.638,492,2.638,493,2.638,494,2.638,495,2.638,496,2.638,497,2.638,498,2.638,499,2.638,500,2.638,501,2.638,502,2.638,503,2.638,504,2.638,505,2.638,506,2.638,507,2.638,508,2.638,509,2.035,510,2.638,511,2.638]],["title/modules.html",[55,2.012]],["body/modules.html",[21,0.068,50,0.059,51,0.068,52,0.059,54,1.833,55,2.238,425,2.782,512,3.607,513,3.607]],["title/overview.html",[514,2.501]],["body/overview.html",[2,2.166,21,0.066,50,0.057,51,0.066,52,0.057,53,1.773,160,2.166,360,2.692,380,2.533,509,2.692,514,2.692,515,4.081,516,3.49,517,4.081]],["title/miscellaneous/typealiases.html",[381,0.704,518,2.893]],["body/miscellaneous/typealiases.html",[6,0.975,7,0.709,11,1.199,20,0.975,21,0.066,50,0.057,51,0.066,52,0.057,87,1.46,111,2.533,120,3.148,381,1.199,382,2.166,519,3.49]],["title/miscellaneous/variables.html",[381,0.704,520,2.232]],["body/miscellaneous/variables.html",[1,1.069,6,0.87,7,0.765,8,2.557,10,1.582,11,1.069,15,1.582,16,1.932,20,1.065,21,0.075,36,2.401,39,2.401,40,2.401,42,1.594,43,1.302,44,2.401,45,1.582,46,1.937,47,1.932,48,1.582,49,2.401,50,0.051,51,0.062,52,0.051,291,2.94,381,1.069,382,2.366,520,2.401,521,3.812]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":516,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":368,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":517,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["2017",{"_index":451,"title":{},"body":{"license.html":{}}}],["2019",{"_index":446,"title":{},"body":{"index.html":{}}}],["21/24",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["4.13.2",{"_index":196,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["6/6",{"_index":369,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":374,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":219,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_config",{"_index":129,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_doc",{"_index":131,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["_w",{"_index":130,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["above",{"_index":480,"title":{},"body":{"license.html":{}}}],["accesstoken",{"_index":118,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["action",{"_index":504,"title":{},"body":{"license.html":{}}}],["actions",{"_index":205,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["add",{"_index":349,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["adddestinationmiddleware",{"_index":170,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["adddestinationmiddleware(integration",{"_index":356,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addintegrationmiddleware",{"_index":168,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addsourcemiddleware",{"_index":167,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["addsourcemiddleware(middleware",{"_index":351,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["alias",{"_index":164,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["alias(userid",{"_index":275,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["aliases",{"_index":519,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":277,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["along",{"_index":231,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["already",{"_index":107,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics",{"_index":363,"title":{},"body":{"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.config",{"_index":45,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["analytics.config.ts",{"_index":8,"title":{},"body":{"interfaces/SegmentConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["analytics.js",{"_index":283,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["analytics.module.ts",{"_index":56,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["analytics.module.ts:32",{"_index":62,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service",{"_index":78,"title":{},"body":{"modules/SegmentModule.html":{}}}],["analytics.service.ts",{"_index":111,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["analyticsconsuming",{"_index":396,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":471,"title":{},"body":{"license.html":{}}}],["angular",{"_index":83,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["angular/common",{"_index":75,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["angular/platform",{"_index":398,"title":{},"body":{"index.html":{}}}],["anonymous",{"_index":292,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["anonymousid",{"_index":293,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["aot",{"_index":84,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["api",{"_index":22,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["apikey",{"_index":14,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["app.component",{"_index":400,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":399,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":109,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["args",{"_index":173,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["args.unshift(method",{"_index":174,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["arising",{"_index":508,"title":{},"body":{"license.html":{}}}],["array",{"_index":326,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["assemblage",{"_index":249,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associate",{"_index":203,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["associated",{"_index":461,"title":{},"body":{"license.html":{}}}],["associates",{"_index":240,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["attaches",{"_index":320,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["authors",{"_index":497,"title":{},"body":{"license.html":{}}}],["available",{"_index":425,"title":{},"body":{"index.html":{},"modules.html":{}}}],["being",{"_index":234,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["binds",{"_index":334,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["bootstrap",{"_index":405,"title":{},"body":{"index.html":{}}}],["bound",{"_index":327,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["browse",{"_index":513,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":85,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["browsermodule",{"_index":397,"title":{},"body":{"index.html":{}}}],["buildto",{"_index":440,"title":{},"body":{"index.html":{}}}],["c",{"_index":450,"title":{},"body":{"license.html":{}}}],["call",{"_index":321,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["callback",{"_index":315,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["callbacks",{"_index":342,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["called",{"_index":279,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["came",{"_index":255,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["category",{"_index":237,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["charge",{"_index":456,"title":{},"body":{"license.html":{}}}],["claim",{"_index":500,"title":{},"body":{"license.html":{}}}],["class",{"_index":97,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["clear",{"_index":298,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["cluster",{"_index":250,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["code",{"_index":313,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["combines",{"_index":263,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["commonmodule",{"_index":73,"title":{},"body":{"modules/SegmentModule.html":{}}}],["company",{"_index":242,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["compatibility",{"_index":49,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["compatible",{"_index":390,"title":{},"body":{"index.html":{}}}],["completed",{"_index":284,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["component",{"_index":409,"title":{},"body":{"index.html":{}}}],["concept",{"_index":258,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["conditions",{"_index":479,"title":{},"body":{"license.html":{}}}],["config",{"_index":66,"title":{},"body":{"modules/SegmentModule.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":510,"title":{},"body":{"license.html":{}}}],["console",{"_index":305,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('segment",{"_index":147,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.error('the",{"_index":142,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["console.log(\"event",{"_index":422,"title":{},"body":{"index.html":{}}}],["console.log('segment",{"_index":152,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["const",{"_index":41,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["constructor(@optional",{"_index":104,"title":{},"body":{"modules/SegmentModule.html":{}}}],["constructor(private",{"_index":419,"title":{},"body":{"index.html":{}}}],["contract",{"_index":505,"title":{},"body":{"license.html":{}}}],["copies",{"_index":473,"title":{},"body":{"license.html":{}}}],["copy",{"_index":459,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":449,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":365,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":260,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["currently",{"_index":273,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["custom",{"_index":33,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["d.ts",{"_index":438,"title":{},"body":{"index.html":{}}}],["damages",{"_index":501,"title":{},"body":{"license.html":{}}}],["database",{"_index":209,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["deal",{"_index":462,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":511,"title":{},"body":{"license.html":{}}}],["debug",{"_index":15,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debug(enabled",{"_index":307,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["declarations",{"_index":401,"title":{},"body":{"index.html":{}}}],["default",{"_index":291,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["default_config",{"_index":46,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":272,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["defined",{"_index":61,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["dependencies",{"_index":380,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":96,"title":{},"body":{"modules/SegmentModule.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["destination",{"_index":353,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["destinations",{"_index":282,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["dictionary",{"_index":212,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["distlicense",{"_index":444,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":469,"title":{},"body":{"license.html":{}}}],["document",{"_index":114,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["documentation",{"_index":366,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["dom",{"_index":132,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["each",{"_index":316,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["element",{"_index":325,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["elements",{"_index":324,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["email",{"_index":214,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["emitted",{"_index":317,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["empty",{"_index":143,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enable",{"_index":306,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["enabled",{"_index":281,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["error('segmentmodule",{"_index":106,"title":{},"body":{"modules/SegmentModule.html":{}}}],["event",{"_index":224,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"license.html":{}}}],["events",{"_index":311,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["execute",{"_index":278,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["export",{"_index":38,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["express",{"_index":488,"title":{},"body":{"license.html":{}}}],["extra",{"_index":232,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["false",{"_index":47,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["files",{"_index":434,"title":{},"body":{"index.html":{},"license.html":{}}}],["first",{"_index":190,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["first.parentnode.insertbefore(script",{"_index":192,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["fitness",{"_index":493,"title":{},"body":{"license.html":{}}}],["following",{"_index":478,"title":{},"body":{"license.html":{}}}],["form",{"_index":335,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forms",{"_index":337,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["forroot",{"_index":59,"title":{},"body":{"modules/SegmentModule.html":{}}}],["forroot(config",{"_index":60,"title":{},"body":{"modules/SegmentModule.html":{}}}],["free",{"_index":455,"title":{},"body":{"license.html":{}}}],["full",{"_index":424,"title":{},"body":{"index.html":{}}}],["function",{"_index":87,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":344,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":476,"title":{},"body":{"license.html":{}}}],["gang",{"_index":252,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["generate",{"_index":436,"title":{},"body":{"index.html":{}}}],["getting",{"_index":384,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwindow",{"_index":95,"title":{},"body":{"modules/SegmentModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getwindow(platformid",{"_index":88,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["granted",{"_index":454,"title":{},"body":{"license.html":{}}}],["graph",{"_index":512,"title":{},"body":{"modules.html":{}}}],["group",{"_index":161,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["group(groupid",{"_index":261,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["groupid",{"_index":259,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["handler",{"_index":322,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helper",{"_index":343,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["helpful",{"_index":303,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["here",{"_index":426,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":453,"title":{},"body":{"license.html":{}}}],["hero",{"_index":412,"title":{},"body":{"index.html":{}}}],["hero.component.css",{"_index":416,"title":{},"body":{"index.html":{}}}],["hero.component.html",{"_index":414,"title":{},"body":{"index.html":{}}}],["herocomponent",{"_index":417,"title":{},"body":{"index.html":{}}}],["holders",{"_index":498,"title":{},"body":{"license.html":{}}}],["host",{"_index":30,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["htmlelement",{"_index":332,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["https",{"_index":187,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["id",{"_index":210,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identified",{"_index":241,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identifier",{"_index":288,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["identify",{"_index":159,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["identify(userid",{"_index":215,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["identities",{"_index":267,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["implements",{"_index":418,"title":{},"body":{"index.html":{}}}],["implied",{"_index":489,"title":{},"body":{"license.html":{}}}],["import",{"_index":35,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["importation",{"_index":402,"title":{},"body":{"index.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["included",{"_index":149,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["including",{"_index":297,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/SegmentConfig.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["information",{"_index":233,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["informations",{"_index":286,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["initialisation",{"_index":63,"title":{},"body":{"modules/SegmentModule.html":{}}}],["initialization",{"_index":29,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["initialized",{"_index":201,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject",{"_index":112,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(document",{"_index":135,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(segment_config",{"_index":136,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["inject(windowwrapper",{"_index":134,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["injectable",{"_index":113,"title":{"injectables/WindowWrapper.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["injectables",{"_index":360,"title":{},"body":{"injectables/WindowWrapper.html":{},"overview.html":{}}}],["injected",{"_index":407,"title":{},"body":{"index.html":{}}}],["injection",{"_index":39,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":36,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":44,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["install",{"_index":393,"title":{},"body":{"index.html":{}}}],["installation",{"_index":392,"title":{},"body":{"index.html":{}}}],["instance",{"_index":86,"title":{},"body":{"modules/SegmentModule.html":{},"injectables/WindowWrapper.html":{}}}],["instead",{"_index":428,"title":{},"body":{"index.html":{}}}],["integration",{"_index":354,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["integrations",{"_index":121,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"overview.html":{}}}],["isplatformbrowser",{"_index":74,"title":{},"body":{"modules/SegmentModule.html":{}}}],["isplatformbrowser(platformid",{"_index":90,"title":{},"body":{"modules/SegmentModule.html":{}}}],["js",{"_index":437,"title":{},"body":{"index.html":{}}}],["key",{"_index":23,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["kind",{"_index":487,"title":{},"body":{"license.html":{}}}],["know",{"_index":213,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["length",{"_index":340,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lets",{"_index":221,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["liability",{"_index":502,"title":{},"body":{"license.html":{}}}],["liable",{"_index":499,"title":{},"body":{"license.html":{}}}],["library",{"_index":389,"title":{},"body":{"index.html":{}}}],["license",{"_index":448,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":465,"title":{},"body":{"license.html":{}}}],["limited",{"_index":490,"title":{},"body":{"license.html":{}}}],["link",{"_index":323,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["lint",{"_index":432,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":435,"title":{},"body":{"index.html":{}}}],["listen",{"_index":314,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["listeners",{"_index":310,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["load",{"_index":28,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["load(apikey",{"_index":199,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["loaded",{"_index":108,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["loadoninitialization",{"_index":16,"title":{},"body":{"interfaces/SegmentConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":302,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["matching",{"_index":51,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":492,"title":{},"body":{"license.html":{}}}],["merge",{"_index":468,"title":{},"body":{"license.html":{}}}],["messages",{"_index":304,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["metadata.json",{"_index":439,"title":{},"body":{"index.html":{}}}],["method",{"_index":172,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["methods",{"_index":57,"title":{},"body":{"modules/SegmentModule.html":{}}}],["middleware",{"_index":350,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["middlewares",{"_index":355,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["milliseconds",{"_index":341,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["miscellaneous",{"_index":381,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":445,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":26,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{}}}],["modify",{"_index":467,"title":{},"body":{"license.html":{}}}],["module",{"_index":53,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":55,"title":{"modules.html":{}},"body":{"modules/SegmentModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":69,"title":{},"body":{"modules/SegmentModule.html":{}}}],["name",{"_index":65,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["new",{"_index":43,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["new(player",{"_index":117,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["next",{"_index":123,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["ngmodule",{"_index":70,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["ngoninit",{"_index":420,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":77,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["noninfringement",{"_index":496,"title":{},"body":{"license.html":{}}}],["notice",{"_index":481,"title":{},"body":{"license.html":{}}}],["npm",{"_index":394,"title":{},"body":{"index.html":{}}}],["npmjs",{"_index":442,"title":{},"body":{"index.html":{}}}],["null",{"_index":103,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["number",{"_index":346,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["object",{"_index":430,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":458,"title":{},"body":{"license.html":{}}}],["official",{"_index":388,"title":{},"body":{"index.html":{}}}],["on(method",{"_index":318,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["on/off",{"_index":301,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["once",{"_index":166,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["oninit",{"_index":410,"title":{},"body":{"index.html":{}}}],["opendecide",{"_index":447,"title":{},"body":{"index.html":{},"license.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":180,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["organization",{"_index":243,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["others",{"_index":119,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["otherwise",{"_index":507,"title":{},"body":{"license.html":{}}}],["out",{"_index":509,"title":{},"body":{"license.html":{},"overview.html":{}}}],["override",{"_index":290,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["overview",{"_index":514,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":379,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":165,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["page(category",{"_index":238,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["page(name",{"_index":236,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pageview",{"_index":158,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["param",{"_index":98,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parentmodule",{"_index":102,"title":{},"body":{"modules/SegmentModule.html":{}}}],["particular",{"_index":494,"title":{},"body":{"license.html":{}}}],["party",{"_index":253,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pass",{"_index":330,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["passed",{"_index":328,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["payload",{"_index":122,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["perform",{"_index":223,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["permission",{"_index":452,"title":{},"body":{"license.html":{}}}],["permit",{"_index":474,"title":{},"body":{"license.html":{}}}],["person",{"_index":457,"title":{},"body":{"license.html":{}}}],["persons",{"_index":475,"title":{},"body":{"license.html":{}}}],["platform_id",{"_index":71,"title":{},"body":{"modules/SegmentModule.html":{}}}],["platformid",{"_index":383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["platoon",{"_index":248,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["pluginname",{"_index":358,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["plugins",{"_index":116,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["portions",{"_index":484,"title":{},"body":{"license.html":{}}}],["previous",{"_index":270,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["previousid",{"_index":269,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["previously",{"_index":265,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["private",{"_index":127,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["project",{"_index":244,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promise",{"_index":216,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["promise((resolve",{"_index":217,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["promises",{"_index":427,"title":{},"body":{"index.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["provide",{"_index":93,"title":{},"body":{"modules/SegmentModule.html":{}}}],["provided",{"_index":485,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":125,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["provider",{"_index":82,"title":{},"body":{"modules/SegmentModule.html":{},"miscellaneous/functions.html":{}}}],["providers",{"_index":92,"title":{},"body":{"modules/SegmentModule.html":{},"index.html":{}}}],["provides",{"_index":386,"title":{},"body":{"index.html":{}}}],["proxied",{"_index":32,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["public",{"_index":99,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"index.html":{}}}],["publish",{"_index":441,"title":{},"body":{"index.html":{},"license.html":{}}}],["purpose",{"_index":495,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["ready",{"_index":163,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["recognizable",{"_index":206,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["recognized",{"_index":271,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["record",{"_index":222,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["registry",{"_index":443,"title":{},"body":{"index.html":{}}}],["requests",{"_index":31,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["reset",{"_index":160,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{},"overview.html":{}}}],["resolve(this",{"_index":220,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["restriction",{"_index":464,"title":{},"body":{"license.html":{}}}],["result",{"_index":50,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":52,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":89,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{}}}],["returns",{"_index":68,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["rights",{"_index":466,"title":{},"body":{"license.html":{}}}],["root",{"_index":126,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["run",{"_index":312,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["same",{"_index":257,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["save",{"_index":395,"title":{},"body":{"index.html":{}}}],["script",{"_index":181,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.async",{"_index":185,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.src",{"_index":186,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["script.type",{"_index":183,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["segment",{"_index":7,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["segment.io",{"_index":24,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segment_config",{"_index":42,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmentconfig",{"_index":1,"title":{"interfaces/SegmentConfig.html":{}},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["segmenthost",{"_index":17,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["segmentmiddleware",{"_index":120,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"miscellaneous/typealiases.html":{}}}],["segmentmodule",{"_index":54,"title":{"modules/SegmentModule.html":{}},"body":{"modules/SegmentModule.html":{},"index.html":{},"modules.html":{}}}],["segmentmodule.forroot",{"_index":403,"title":{},"body":{"index.html":{}}}],["segmentplugin",{"_index":110,"title":{"interfaces/SegmentPlugin.html":{}},"body":{"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmentservice",{"_index":76,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"index.html":{}}}],["segmenturi",{"_index":18,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["selector",{"_index":411,"title":{},"body":{"index.html":{}}}],["sell",{"_index":472,"title":{},"body":{"license.html":{}}}],["sended",{"_index":423,"title":{},"body":{"index.html":{}}}],["service",{"_index":408,"title":{},"body":{"index.html":{}}}],["set",{"_index":309,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["setanonymousid",{"_index":169,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["setanonymousid(anonymousid",{"_index":294,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["shall",{"_index":482,"title":{},"body":{"license.html":{}}}],["skipself",{"_index":72,"title":{},"body":{"modules/SegmentModule.html":{}}}],["snippet",{"_index":148,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["society",{"_index":254,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["software",{"_index":460,"title":{},"body":{"license.html":{}}}],["soon",{"_index":280,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["src/.../ngx",{"_index":382,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/ngx",{"_index":6,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/window",{"_index":361,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["started",{"_index":385,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":367,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":58,"title":{},"body":{"modules/SegmentModule.html":{}}}],["status",{"_index":27,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["styleurls",{"_index":415,"title":{},"body":{"index.html":{}}}],["subject",{"_index":477,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":470,"title":{},"body":{"license.html":{}}}],["submission",{"_index":336,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["substantial",{"_index":483,"title":{},"body":{"license.html":{}}}],["table",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":429,"title":{},"body":{"index.html":{}}}],["team",{"_index":246,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["templateurl",{"_index":413,"title":{},"body":{"index.html":{}}}],["text/javascript",{"_index":184,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config",{"_index":137,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.apikey",{"_index":140,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.debug",{"_index":151,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.loadoninitialization",{"_index":138,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenthost",{"_index":188,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._config.segmenturi.replace('$api_key",{"_index":189,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.createelement('script",{"_index":182,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._doc.getelementsbytagname('script')[0",{"_index":191,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics",{"_index":144,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics._loadoptions",{"_index":193,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics._writekey",{"_index":194,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.adddestinationmiddleware(integration",{"_index":357,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.addsourcemiddleware(middleware",{"_index":352,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.alias(userid",{"_index":276,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.debug(enabled",{"_index":308,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.factory",{"_index":171,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.factory(method",{"_index":178,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.group(groupid",{"_index":262,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.id",{"_index":289,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.identify(userid",{"_index":218,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.initialize",{"_index":145,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.invoked",{"_index":146,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load",{"_index":179,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.load(apikey",{"_index":200,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.methods",{"_index":153,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.methods.foreach((method",{"_index":176,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.on(method",{"_index":319,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.page(category",{"_index":239,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.plugins",{"_index":359,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.push(args",{"_index":175,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.ready(_",{"_index":285,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.reset",{"_index":299,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.setanonymousid(anonymousid",{"_index":295,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.snippet_version",{"_index":195,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.timeout(timeout",{"_index":348,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.track(event",{"_index":228,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.trackform(forms",{"_index":339,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.tracklink(elements",{"_index":333,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.user",{"_index":287,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics.user().traits",{"_index":296,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this._w.analytics[method",{"_index":177,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.debug(this._config.debug",{"_index":202,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.load(this._config.apikey",{"_index":197,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["this.segment.track('load",{"_index":421,"title":{},"body":{"index.html":{}}}],["throw",{"_index":105,"title":{},"body":{"modules/SegmentModule.html":{}}}],["timeout",{"_index":345,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["timeout(timeout",{"_index":347,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["token",{"_index":40,"title":{},"body":{"interfaces/SegmentConfig.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":506,"title":{},"body":{"license.html":{}}}],["track",{"_index":162,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["track(event",{"_index":227,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["trackclick",{"_index":155,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform",{"_index":157,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["trackform(forms",{"_index":338,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracking",{"_index":226,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink",{"_index":156,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["tracklink(elements",{"_index":331,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tracksubmit",{"_index":154,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["traits",{"_index":208,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["tribe",{"_index":247,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["troop",{"_index":251,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["true",{"_index":48,"title":{},"body":{"interfaces/SegmentConfig.html":{},"interfaces/SegmentPlugin.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":433,"title":{},"body":{"index.html":{}}}],["turn",{"_index":300,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["twice",{"_index":150,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["two",{"_index":264,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/SegmentConfig.html":{},"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":518,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":139,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["unassociated",{"_index":266,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["undefined",{"_index":141,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["universal",{"_index":391,"title":{},"body":{"index.html":{}}}],["up",{"_index":256,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["uri",{"_index":34,"title":{},"body":{"interfaces/SegmentConfig.html":{}}}],["use",{"_index":406,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":329,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usefactory",{"_index":94,"title":{},"body":{"modules/SegmentModule.html":{}}}],["user",{"_index":211,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["userconfig",{"_index":133,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["userid",{"_index":207,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["users",{"_index":204,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["user’s",{"_index":274,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["usevalue",{"_index":100,"title":{},"body":{"modules/SegmentModule.html":{}}}],["using",{"_index":387,"title":{},"body":{"index.html":{}}}],["value",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":370,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":520,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":115,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["viewed",{"_index":235,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["views",{"_index":229,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["void",{"_index":124,"title":{},"body":{"interfaces/SegmentPlugin.html":{},"index.html":{}}}],["void;development",{"_index":431,"title":{},"body":{"index.html":{}}}],["want",{"_index":268,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["warranties",{"_index":491,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":486,"title":{},"body":{"license.html":{}}}],["website",{"_index":230,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["whether",{"_index":503,"title":{},"body":{"license.html":{}}}],["window",{"_index":80,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"miscellaneous/functions.html":{}}}],["windowwrapper",{"_index":79,"title":{"injectables/WindowWrapper.html":{}},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["without",{"_index":463,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":245,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["wrapper",{"_index":81,"title":{},"body":{"modules/SegmentModule.html":{},"interfaces/SegmentPlugin.html":{},"injectables/WindowWrapper.html":{}}}],["wrapper.ts",{"_index":362,"title":{},"body":{"injectables/WindowWrapper.html":{},"coverage.html":{}}}],["wrapper.ts:9",{"_index":364,"title":{},"body":{"injectables/WindowWrapper.html":{}}}],["write",{"_index":198,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["yes",{"_index":67,"title":{},"body":{"modules/SegmentModule.html":{}}}],["your_write_apikey",{"_index":404,"title":{},"body":{"index.html":{}}}],["you’re",{"_index":225,"title":{},"body":{"interfaces/SegmentPlugin.html":{}}}],["zoom",{"_index":515,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/SegmentConfig.html":{"url":"interfaces/SegmentConfig.html","title":"interface - SegmentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.config.ts\n        \n\n\n            \n                Description\n            \n            \n                Segment Configuration Interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loadOnInitialization\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentHost\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segmentUri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    API Key for Segment.io\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Debug mode status\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadOnInitialization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadOnInitialization:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Load Segment configuration on initialization\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentHost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Host if requests are proxied\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentUri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Segment Custom URI\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {InjectionToken} from '@angular/core';\n\n/**\n * Segment Configuration Interface\n */\nexport interface SegmentConfig {\n    /** API Key for Segment.io */\n    apiKey?: string;\n    /** Debug mode status */\n    debug?: boolean;\n    /** Load Segment configuration on initialization */\n    loadOnInitialization?: boolean;\n    /** Segment Host if requests are proxied **/\n    segmentHost?: string;\n    /** Segment Custom URI **/\n    segmentUri?: string;\n}\n\n/** Segment Configuration Injection Token */\nexport const SEGMENT_CONFIG: InjectionToken = new InjectionToken('ngx-segment-analytics.config');\n\nexport const DEFAULT_CONFIG: SegmentConfig = {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SegmentModule.html":{"url":"modules/SegmentModule.html","title":"module - SegmentModule","body":"\n                   \n\n\n\n\n    Modules\n    SegmentModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-segment-analytics.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Segment Module\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config?: SegmentConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/ngx-segment-analytics.module.ts:32\n                \n            \n\n\n            \n                \n                    Segment Module Initialisation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SegmentConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Segment Configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        Segment Module\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {CommonModule, isPlatformBrowser} from '@angular/common';\nimport {SegmentService} from './ngx-segment-analytics.service';\nimport {SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\n\n/**\n * Window Provider for Angular AOT\n * @returns Browser Window instance\n */\nexport function getWindow(platformId: any) {\n    return isPlatformBrowser(platformId) ? window : {};\n}\n\n/**\n * Segment Module\n */\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        {provide: WindowWrapper, useFactory: getWindow, deps: [PLATFORM_ID]},\n    ]\n})\nexport class SegmentModule {\n\n    /**\n     * Segment Module Initialisation\n     *\n     * @param config Segment Configuration\n     * @returns Segment Module\n     */\n    public static forRoot(config?: SegmentConfig): ModuleWithProviders {\n        return {\n            ngModule: SegmentModule,\n            providers: [\n                {provide: SEGMENT_CONFIG, useValue: config},\n                SegmentService,\n            ],\n        };\n    }\n\n    /**\n     * Segment Module Constructor\n     *\n     * @param parentModule Must be null\n     */\n    constructor(@Optional() @SkipSelf() parentModule: SegmentModule) {\n        if (parentModule) {\n            throw new Error('SegmentModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentPlugin.html":{"url":"interfaces/SegmentPlugin.html","title":"interface - SegmentPlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentPlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ngx-segment-analytics.service.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {DEFAULT_CONFIG, SEGMENT_CONFIG, SegmentConfig} from './ngx-segment-analytics.config';\nimport {WindowWrapper} from './window-wrapper';\n\nexport interface SegmentPlugin {\n    // Video Plugins\n    new(player: any, accessToken: string): any;\n\n    // Others plugins\n    new(): any;\n}\n\nexport type SegmentMiddleware = ({integrations, payload, next}) => void;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SegmentService {\n\n    private readonly _config: SegmentConfig;\n\n    /**\n     * @param _w Browser window\n     * @param _doc Browser DOM\n     * @param userConfig Segment configuration\n     */\n    constructor(\n        @Inject(WindowWrapper) private _w: WindowWrapper,\n        @Inject(DOCUMENT) private _doc: any,\n        @Inject(SEGMENT_CONFIG) userConfig: SegmentConfig\n    ) {\n        this._config = {...DEFAULT_CONFIG, ...userConfig};\n\n        if (this._config.loadOnInitialization && (typeof this._config.apiKey === 'undefined' || this._config.apiKey === '')) {\n            console.error('The API Key cannot be an empty string if Segment must be loaded on initialization.');\n            return;\n        }\n\n        if (\n            typeof this._w.analytics === 'undefined'\n            || typeof this._w.analytics.initialize === 'undefined'\n            || this._w.analytics.initialize === false\n        ) {\n            if (typeof this._w.analytics !== 'undefined' && this._w.analytics.invoked === true) {\n                console.error('Segment snippet included twice.');\n                return;\n            }\n\n            if (this._config.debug) {\n                console.log('Segment initialization...');\n            }\n\n            this._w.analytics = [];\n            this._w.analytics.invoked = true;\n\n            this._w.analytics.methods = [\n                'trackSubmit',\n                'trackClick',\n                'trackLink',\n                'trackForm',\n                'pageview',\n                'identify',\n                'reset',\n                'group',\n                'track',\n                'ready',\n                'alias',\n                'debug',\n                'page',\n                'once',\n                'off',\n                'on',\n                'addSourceMiddleware',\n                'addIntegrationMiddleware',\n                'setAnonymousId',\n                'addDestinationMiddleware',\n            ];\n\n            this._w.analytics.factory = (method: string) => {\n                return (...args) => {\n                    args.unshift(method);\n                    this._w.analytics.push(args);\n                    return this._w.analytics;\n                };\n            };\n\n            this._w.analytics.methods.forEach((method: string) => {\n                this._w.analytics[method] = this._w.analytics.factory(method);\n            });\n\n            this._w.analytics.load = (key: string, options: { integrations: { [key: string]: boolean } }) => {\n                const script = this._doc.createElement('script');\n                script.type = 'text/javascript';\n                script.async = true;\n                script.src = 'https://' + this._config.segmentHost + this._config.segmentUri.replace('$API_KEY$', key);\n\n                const first = this._doc.getElementsByTagName('script')[0];\n                first.parentNode.insertBefore(script, first);\n                this._w.analytics._loadOptions = options;\n            };\n\n            this._w.analytics._writeKey = this._config.apiKey;\n            this._w.analytics.SNIPPET_VERSION = '4.13.2';\n            if (this._config.loadOnInitialization) {\n                this.load(this._config.apiKey);\n            }\n        }\n    }\n\n    /**\n     * Load Segment configuration.\n     *\n     * @param apiKey Write API Key\n     * @param options Optional parameters\n     */\n    public load(apiKey: string, options?: any): void {\n        this._w.analytics.load(apiKey, options);\n        if (this._config.debug) {\n            console.log('Segment initialized');\n        }\n        this.debug(this._config.debug);\n    }\n\n    /**\n     * The identify method is how you associate your users and their actions to a recognizable userId and traits.\n     *\n     * @param userId The database ID for the user.\n     * @param traits A dictionary of traits you know about the user, like their email or name\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public identify(userId?: string, traits?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.identify(userId, traits, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The track method lets you record any actions your users perform.\n     *\n     * @param event The name of the event you’re tracking.\n     * @param properties A dictionary of properties for the event.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public track(event: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.track(event, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(name?: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category: string, name: string, properties?: any, options?: any): Promise;\n\n    /**\n     * The page method lets you record page views on your website, along with optional extra information about the page being viewed.\n     *\n     * @param category The category of the page.\n     * @param name The name of the page.\n     * @param properties A dictionary of properties of the page.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public page(category?: string, name?: string, properties?: any, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.page(category, name, properties, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The group method associates an identified user with a company, organization, project, workspace, team, tribe, platoon,\n     * assemblage, cluster, troop, gang, party, society or any other name you came up with for the same concept.\n     *\n     * @param groupId The Group ID to associate with the current user.\n     * @param traits A dictionary of traits for the group.\n     *\n     * @returns\n     */\n    public group(groupId: string, traits?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.group(groupId, traits, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The alias method combines two previously unassociated user identities.\n     *\n     * @param userId The new user ID you want to associate with the user.\n     * @param previousId The previous ID that the user was recognized by. This defaults to the currently identified user’s ID.\n     * @param options A dictionary of options.\n     *\n     * @returns\n     */\n    public alias(userId: string, previousId?: string, options?: any): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.alias(userId, previousId, options, _ => resolve(this));\n        });\n    }\n\n    /**\n     * The ready method allows you execute a promise that will be called as soon as all of your enabled destinations have loaded\n     * and analytics.js has completed initialization.\n     *\n     * @returns\n     */\n    public ready(): Promise {\n        return new Promise((resolve) => {\n            this._w.analytics.ready(_ => resolve(this));\n        });\n    }\n\n    /**\n     * Return informations about the currently identified user\n     *\n     * @returns Informations about the currently identified user\n     */\n    public user(): any {\n        return this._w.analytics.user();\n    }\n\n    /**\n     * Return identifier about the currently identified user\n     *\n     * @returns Identifier about the currently identified user\n     */\n    public id(): string | null {\n        return this._w.analytics.id();\n    }\n\n    /**\n     * Override the default Anonymous ID\n     *\n     * @param anonymousId New anonymous ID\n     */\n    public setAnonymousId(anonymousId: string): void {\n        this._w.analytics.setAnonymousId(anonymousId);\n    }\n\n    /**\n     * Return traits about the currently identified user\n     *\n     * @returns Traits about the currently identified user\n     */\n    public traits(): any {\n        return this._w.analytics.user().traits();\n    }\n\n    /**\n     * Reset the id, including anonymousId, and clear traits for the currently identified user and group.\n     */\n    public reset(): void {\n        this._w.analytics.reset();\n    }\n\n    /**\n     * Turn on/off debug mode, logging helpful messages to the console.\n     *\n     * @param enabled Enable or not the debug mode\n     */\n    public debug(enabled?: boolean): void {\n        this._w.analytics.debug(enabled);\n    }\n\n    /**\n     * Set listeners for these events and run your own custom code.\n     *\n     * @param method Name of the method to listen for\n     * @param callback A function to execute after each the emitted method\n     */\n    public on(method: string, callback: (event?: string, properties?: any, options?: any) => any): void {\n        this._w.analytics.on(method, callback);\n    }\n\n    /**\n     * Attaches the `track` call as a handler to a link\n     *\n     * @param elements DOM element or an array of DOM elements to be bound with track method.\n     * @param event The name of the event, passed to the `track` method or a function that returns a string to be used\n     *              as the name of the track event.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackLink(elements, event, properties);\n    }\n\n    /**\n     * Binds a `track` call to a form submission.\n     *\n     * @param forms The form element to track or an array of form\n     * @param event The name of the event, passed to the `track` method.\n     * @param properties A dictionary of properties to pass with the `track` method.\n     */\n    public trackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: any | Function): void {\n        this._w.analytics.trackForm(forms, event, properties);\n    }\n\n    /**\n     * Set the length (in milliseconds) of the callbacks and helper functions\n     *\n     * @param timeout Number of milliseconds\n     */\n    public timeout(timeout: number): void {\n        this._w.analytics.timeout(timeout);\n    }\n\n    /**\n     * Add a source middleware called on events\n     *\n     * @param middleware Custom function\n     */\n    public addSourceMiddleware(middleware: SegmentMiddleware): void {\n        this._w.analytics.addSourceMiddleware(middleware);\n    }\n\n    /**\n     * Add a destination middleware called on events\n     *\n     * @param integration Integration name\n     * @param middlewares Custom functions\n     */\n    public addDestinationMiddleware(integration: string, middlewares: SegmentMiddleware[]): void {\n        this._w.analytics.addDestinationMiddleware(integration, middlewares);\n    }\n\n    public get plugins(): { [pluginName: string]: SegmentPlugin } {\n        return this._w.analytics.plugins;\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowWrapper.html":{"url":"injectables/WindowWrapper.html","title":"injectable - WindowWrapper","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WindowWrapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/window-wrapper.ts\n        \n\n\n            \n                Description\n            \n            \n                Window Wrapper for Angular AOT\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                analytics\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        analytics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/window-wrapper.ts:9\n                        \n                    \n\n            \n                \n                    Segment Analytics.js instance\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n/**\n * Window Wrapper for Angular AOT\n */\n@Injectable()\nexport class WindowWrapper {\n    /** Segment Analytics.js instance */\n    public analytics: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            interface\n            SegmentConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            DEFAULT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.config.ts\n            \n            variable\n            SEGMENT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.module.ts\n            \n            function\n            getWindow\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            injectable\n            SegmentService\n            \n                87 %\n                (21/24)\n            \n        \n        \n            \n                \n                src/ngx-segment-analytics.service.ts\n            \n            interface\n            SegmentPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/window-wrapper.ts\n            \n            injectable\n            WindowWrapper\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getWindow   (src/.../ngx-segment-analytics.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getWindow\n                        \n                    \n                \n            \n            \n                \ngetWindow(platformId)\n                \n            \n\n\n\n\n            \n                \n                    Window Provider for Angular AOT\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    platformId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-segment-analytics\n\n\n\n\n\n\n\nThis Angular module provides an API for Segment using the analytics.js official library.\nCompatible with Angular AOT and Universal.\nInstallation\nTo install this library, run:\n$ npm install --save ngx-segment-analyticsConsuming Segment\nAdd the SegmentModule to your Angular AppModule:\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// Import the Segment module\nimport { SegmentModule } from 'ngx-segment-analytics';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // Segment Importation\n    SegmentModule.forRoot({ apiKey: 'YOUR_WRITE_APIKEY', debug: true, loadOnInitialization: true })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }You can use the SegmentService in any constructor as a injected service :\nimport { Component, OnInit } from '@angular/core';\nimport { SegmentService } from 'ngx-segment-analytics';\n@Component({\n    selector: 'hero',\n    templateUrl: './hero.component.html',\n    styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n    constructor(private segment: SegmentService) { }\n\n    public ngOnInit() {\n        this.segment.track('load an hero')\n            .then(() => console.log(\"Event sended\"));\n    }\n\n}Documentation\nA full documentation is available here\nAPI\nThis API is compatible with analytics.js but returns Promises instead of taking callbacks in parameters.\nload(apiKey: string, options: any);\nget plugins: {[pluginName :string]: SegmentPlugin};\nidentify(userId?: string, traits?: any, options?: any): Promise;\ntrack(event: string, properties?: any, options?: any): Promise;\npage(category?: string, name?: string, properties?: any, options?: any): Promise;\ngroup(groupId: string, traits?: any): Promise;\nalias(userId: string, previousId?: string, options?: any): Promise;\nready(): Promise;\nuser(): any;\nid(): any;\ntraits(): any;\nreset(): void;\ndebug(enabled?: boolean): void;\non(method: string, callback: (event?: string, properties?: any, options?: any) => any): void;\ntrackLink(elements: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntrackForm(forms: HTMLElement | HTMLElement[], event: string | Function, properties?: Object | Function): void;\ntimeout(timeout: number): void;\naddSourceMiddleware(middleware: ({integrations, payload, next}) => void): void;Development\nTo lint all *.ts files:\n$ npm run lintTo generate all *.js, *.d.ts and *.metadata.json files:\n$ npm run buildTo publish on npmjs registry :\n$ npm publish distLicense\nMIT ©2019 OpenDecide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 OpenDecide\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SegmentModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SegmentMiddleware   (src/.../ngx-segment-analytics.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.service.ts\n    \n    \n        \n            \n                \n                    \n                    SegmentMiddleware\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                        \n                            SEGMENT_CONFIG   (src/.../ngx-segment-analytics.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-segment-analytics.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    debug: false,\n    loadOnInitialization: true, // Compatibility \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SEGMENT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('ngx-segment-analytics.config')\n                    \n                \n\n            \n                \n                    Segment Configuration Injection Token\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
